# ðŸ“Š Newspaper Survival SQL Insights  

This repository contains SQL queries designed to analyze newspaper circulation, ad revenue, and digital readiness between **2019â€“2024**.  

## -- 1. Monthly Circulation Drop Check
```sql
WITH circulation_mom AS (
    SELECT 
        fs.city_ID,
        c.city AS city_name,
        DATE_FORMAT(fs.month, '%Y-%m') AS month_yyyy_mm,
        fs.net_circulation,
        LAG(fs.net_circulation) OVER (
            PARTITION BY fs.city_ID 
            ORDER BY fs.month
        ) AS prev_net_circulation
    FROM fact_print_sales fs
    JOIN dim_city c 
        ON fs.city_ID = c.city_id
    WHERE fs.Year BETWEEN 2019 AND 2024
)
SELECT 
    city_name,
    month_yyyy_mm,
    net_circulation,
    (net_circulation - prev_net_circulation) AS circulation_drop
FROM circulation_mom
WHERE prev_net_circulation IS NOT NULL
ORDER BY circulation_drop ASC   -- ASC because largest decline = most negative
LIMIT 3;

## -- 2. Yearly Revenue Concentration by Category
```sql
WITH category_yearly_revenue AS (
    SELECT 
        fr.year,
        dac.standard_ad_category AS category_name,
        SUM(fr.ad_revenue) AS category_revenue
    FROM fact_ad_revenue fr
    JOIN dim_ad_category dac 
        ON fr.ad_category = dac.raw_ad_category
    GROUP BY fr.year, dac.standard_ad_category
),
yearly_total AS (
    SELECT 
        year,
        SUM(category_revenue) AS total_revenue_year
    FROM category_yearly_revenue
    GROUP BY year
)
SELECT 
    cyr.year,
    cyr.category_name,
    cyr.category_revenue,
    yt.total_revenue_year,
    ROUND((cyr.category_revenue / yt.total_revenue_year) * 100, 2) AS pct_of_year_total
FROM category_yearly_revenue cyr
JOIN yearly_total yt 
    ON cyr.year = yt.year
ORDER BY cyr.year, pct_of_year_total DESC;

